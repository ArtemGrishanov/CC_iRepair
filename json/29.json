{"Id":0,"Title":"Сайт-визитка iRepair","LessonPart":[{"LessonNumber":2,"Title":"Введение","Type":"content","Tags":"","Tech":"","Experience":"1","Comment":"","Description":[{"Id":0,"PageNumber":1,"Content":"<author role=\"manager\">\nПриветствуем тебя, начинающий веб-программист!\nЕсть задача: создать для одного из наших постоянных клиентов сайт-визитку по ремонту техники. \nРешили поручить тебе разработку главной страницы. Уверен, ты справишься.\nВот так выглядит макет главной страницы\n<img src=\"/images/taskN.png\" width=\"200px\"/>\nСохрани макет, будем работать по нему.\n<a href=\"/images/taskN.png\">Скачать</a>\nТвой наставник введет тебя в курс дела.\n</author>"},{"Id":0,"PageNumber":2,"Content":"<author role=\"mentor\">\nПривет друг, я твой наставник в этом проекте! В ходе этого проекта ты познакомишься в основами веб-программирования на практике. Ведь лучшее обучение - это, конечно, практика. Учись, выполняя задачи.\nВ будущем нас ждет много интересных и сложных проектов по веб-разработке.\n</author>"},{"Id":0,"PageNumber":3,"Content":"Пожалуйста, ответь на вопросы анкеты (примерно 1 минута)\n<a href=\"https://docs.google.com/forms/d/1B4PHWuKajA7Fwjd9Q-wr3yTy8uEcaHjJQyK1uwgWp2o/viewform\">Анкета</a>"},{"Id":0,"PageNumber":4,"Content":"<author role=\"mentor\">\nНачнем мы с настройки рабочего окружения. Перейдем к следующему разделу.\n</author>"}],"Tutorial":[{"PageNumber":1,"Content":""}],"Job":[{"PageNumber":1,"Content":""}],"DescriptionText":"Знакомимся с проектом и наставником."},{"LessonNumber":3,"Title":"Настройка окружения","Type":"task","Tags":"html[1]","Tech":"","Experience":"4","Comment":"","Description":[{"PageNumber":1,"Content":"<author role=\"mentor\">\nВы пришли на работу, с чего вы начнете? Конечно с настройки рабочей среды.\nЕсли у тебя еще нет редактора кода, можешь воспользоваться, например: 'Sublime Text'\nОсновным браузером для отладки у нас будет Chrome.\n</author>"},{"PageNumber":2,"Content":"<author role=\"mentor\">\nРасскажу немного о процессе работы. В этом проекте мы будем работать с одним html-файлом. Назовем его стандартно: \"index.html\". Позже добавится графика.\n<img src=\"/images/project_folders.png\"/>\nДостаточно будет открывать этот локальный файл в браузере, чтобы увидеть результат.\n</author>"},{"PageNumber":3,"Content":"<author role=\"mentor\">\nВообще по хорошему надо использовать системы контроля версий для каждого проекта. Например, git.\nДумаю в этом проекте обойдемся :) Но в следующем будем обязательно, имей ввиду.\n</author>"}],"Tutorial":[{"PageNumber":1,"Content":""}],"Job":[{"PageNumber":1,"Content":"Если у тебя еще нет редактора для разработки, зайди на официальный сайт Sublime Text и скачай редактор кода.\n<a href=\"http://www.sublimetext.com/2\">Перейти</a>"},{"PageNumber":2,"Content":"Создай каталог проекта, например \"Repair Landing\"\nПомни, названия всегда должны отражать реальную суть проекта."},{"PageNumber":3,"Content":"Создай там пустой файлик index.html и напиши в нем текст, например \"Здесь будет сайт\""},{"PageNumber":4,"Content":"Проверь, что браузер открывает его.\nКстати, у меня вот так:\n<img src=\"/images/index_localhost.png\"/>\nЭто потому, что ты сохранил файл в кодировке utf-8, а браузер по-умолчанию отображает страницы в Windows-1251. Можно сменить кодировку страницы в ручную через меню браузера \"Посмотреть\" -> \"Кодировка\", выставив значение utf-8.\nНо правильно использовать специальный тег <code>meta</code> в веб странице.\n<listing>\n<meta charset=\"UTF-8\">\n</listing>\nНо об этом после, не будем забегать вперед."}],"DescriptionText":"Подготовка рабочего окружения и средств для работы"},{"LessonNumber":4,"Title":"Создать новый проект и сделать каркас приложения.","Type":"task","Tags":"css[1], html[3]","Tech":"","Experience":"10","Comment":"","Description":[{"PageNumber":1,"Content":"Обзор задачи:\n- Создание index.html\n- Создание основных html-тегов документа\n- Создание блоков\n- Создание классов\n\nТебе потребуются:\n- HTML Введение\n- CSS основы\n- Структура HTML страницы"},{"PageNumber":2,"Content":"<author role=\"mentor\">\nПервая твоя задача создать новый проект. В нашем случае это просто один файлик index.html. И разместить в нем основные теги html страницы. Стили оставим также внутри этого файла.\nПосмотри дизайн страницы, на ней видно несколько основных блоков.\n<quiz>{\"type\": \"radiobutton\", \"tags\": \"\", \"question\": \"Сколько основных блоков можно выделить на макете страницы?\", \"choice\": [\"4\",\"6\",\"8\"],\"answer\":\"1\", \"explanation\": \"Можно увидеть 6 блоков расположенных в один большой столбец. Будем постепенно верстать страничку сверху вниз.\"}</quiz>\nБудем использовать верстку с помощью блоков <code>div</code>. Это основной инструмент верстки.\n</author>"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"Здесь сделаем небольшую заметку о теории.\nЧеловеку, изучающему новую технологию, непременно нужны базовые теоретические знания. Вот хотя бы о html и css, базовых принципах построения html документа, как в этой первой задаче.\nВеб огромен. Вся необходимая теория уже давно была изложена и систематизирована сайтами, у кого-то лучше у кого-то хуже.\nНужно сразу учиться работать с надежными и грамотными источниками. Лучше, если вы знаете английский достаточно для чтения первоисточников и документации.\nОбычно процесс обучения на практике представляет из себя чередование чтения теории и выполнения задания.\nВ настоящей IT разработке, крупных и малых компаниях действует тот же принцип: сотрудник получает задачу, если знаний его не хватает, он ищет нужную информацию в интернете и быстро применяет ее на практике.\nВ сервисе Compilisto наставники уже собрали для вас все необходимые источники теоритической информации, необходимые для решения задач.\n\nЕсли вы уже знаете ту или иную теорию, можете ее пропустить.\nНе пытайтесь объять сразу все. Вполне нормально, что часть понятий и идей не удастся усвоить с первого раза."},{"Id":0,"PageNumber":2,"Content":"HTML это язык разметки для описания документов (веб-страниц) в сети Интернет. Hyper Text Markup Language - язык гипертекстовой разметки. Большинство страниц в сети представляет из себя именно HTML\nHTML страница передается от сервера в браузер. Браузер парсит HTML-код и показывает пользователю контент.\nЯзык разметки состоит из множества тегов.\nКаждый тег описывает какой-то контент.\nHTML теги - это специальные ключевые слова заключенные в треугольные скобки:\n<tagname>Содержимое</tagname>\nОбычно каждому тегу соответствует парный закрывающий тег со слешем, например<code><p></code> and <code></p></code>\nПростой пример:\n<listing>\n<!DOCTYPE html>\n<html>\n<head>\n<title>Название страницы</title>\n</head>\n<body>\n<h1>Заголовок</h1>\n<p>Немного текста</p>\n</body>\n</html>\n</listing>\nЧто есть что в этом примере:\nDOCTYPE показывает что этот документ действительно является html.\nТекст внутри <html></html> описывает html документ.\nТекст внутри <head></head> продоставляет некоторую служебную информацию об html странице.\nТекст внутри <title></title> задает заголовок документа\nТекст внутри <body></body> главная часть, описывает видимую страницу, основной контент документа.\nТекст внутри <h1></h1> это заголовок первого уровня.\nТекст внутри <p></p> это текстовый параграф (то есть текст с новой строки)\nИспользуя этот текст в формате html браузер показывает заголовок и текст.\nСтруктура страницы\nhtml - корневой тег.\nhead - описывает свойства страницы, например заголовок, кодировку и так далее.\nbody - основная часть страницы. Только body визуально отображается во вкладке браузера.\n<code><!DOCTYPE></code> позволяет браузеру корректно отобразить веб-страницу. Существует несколько различных версий стандарта html. DOCTYPE подсказывает браузеру, какая именно используется.\nЕще можно посмотреть:\n<a href=\"https://ru.wikipedia.org/wiki/HTML\">https://ru.wikipedia.org/wiki/HTML</a>"},{"Id":0,"PageNumber":3,"Content":"<h2>Структура HTML страницы</h2>\nhtml, head, body - являются обязательными и основными тегами и задают каркас html документа.\n<listing>\n<html>\n<head>\n</head>\n<body>\n</body>\n</html>\n</listing>\n<code>html</code> - корневой тег страницы.\n<code>head</code> - обычно содержит служебные атрибуты: заголовок, ключевые слова, используемую кодировку. Также туда часто прописывают подключаемые стили и скрипты.\n<code>body</code> - включает в себя содержимое страницы. То есть то, что увидит пользователь, контент, записывается внутри body.\nКак можно заметить html-документ представляет собой иерархическую структуру. Ее еще называют DOM (Document Object Model).\nDOM - это интерфейс (АПИ), которое определяет как взаимодействовать с html или xml документом.\nПример. Можете создать html-файл и скопировать туда этот пример, а потом открыть в браузере.\n<listing>\n<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n<title>Страница 1</title>\n<meta charset=\"utf-8\"/>\n</head>\n<body>\n<!-- Внутри body может находиться что угодно -->\n<h1>Заголовок</h1>\n<p>Полезный текст</p>\n</body>\n</html>\n</listing>\nСсылки:\nDOM - https://ru.wikipedia.org/wiki/Document_Object_Model"},{"Id":0,"PageNumber":4,"Content":"css, или Cascading Style Sheets — каскадные таблицы стилей - технология, позволяющая  описать оформление элементов страницы специальным\nформальным языком css.   Основная цель создания css - отделить описание структуры документа, как правило, на языке html, от описания его оформления. Перейдем к\nпримеру, с ним сразу все станет понятней и проще. Допустим, у нас есть просто текст:\n \n<listing>\n<html>\n<head>\n<title>\n</title>\n</head>\n<body>\n<div>Тут просто текст для примера</div>\n</body>\n</html>\n</listing>\nДля наглядности заключим его в тег <div>. Как и большинство современных тегов, он имеет атрибут <code>class</code>, в который можно записать имя класса, содержащего\nто самое описание оформления элемета. А сам текст принято записывать между <code><head>...</head></code> документа. Хотя сегодня это требование не так строго, но\nего принято придерживаться. Назовем наш класс \"text-example\". Текст класса добавляется в тег-контейнер <code>style</code>\n \n<listing>\n<html>\n<head>\n<title>\n</title>\n \n<style>\n.text-example\n{\ncolor: blue;\nfont-weight: bold;\n}\n</style>\n</head>\n<body>\n<div class=\"text-example\">Тут просто текст для примера</div>\n</body>\n</html>\n</listing>\nВот и все - наш текст стал синим и жирным. Заметьте, что перед именем класс мы поставили точку - это означает, что \"text-example\" именно класс, а не идентификатор\nили тег. В случае использования идентификаторов используется запись \n<listing>\n................\n<style>\n#text-example\n{\ncolor: blue;\nfont-weight: bold;\n}\n</style>\n \n.................\n<div id=\"text-example\">Тут просто текст для примера</div>\n...\n</listing>\n \nТо есть теперь, чтобы дать знать, что данное оформление относится к идентификатору, используем знак \"#\". Если же надо указать оформление для всех тегов одного\nтипа на данной странце, то не ставится ни то, ни другое: \n<listing>\n................\n<style>\ndiv{ описание для всех div }\nimg{описание для всех картинок, установленных тегом img}\na{ описание для всех ссылок }\n</style>\n</listing>\nПрелесть подобного подхода состоит в том, что если требуется несколько одинаковых элементов, то достаточно у каждого прописать имя класса, заполнив\nатрибут <code>class</code>, сам же класс достаточно написать единожды. При внесении изменений в дизайн, опять же, надо будет сделать одну правку в классе, а\nне проходиться по всем элементам с нужным оформлением.  \nА как же быть, влзникает вопрос, если надо использовать одни и те-же классы на разных страницах? А обычно так и бывает. Все просто: текст с описанием стилей\nпишется во внешнем файле с расширением \"css\". Собственно, это уже вошло в стандарт.\n \nВо-первых, код  документа делается текст существенно короче, что облегчает\nнавигацию по нему.\nВо-вторых, в современных сайтах используется не один, а несколько наборов стилей. Например, для оформления карусели один, для самого сайта\nдругой, для платежных систем третий.. Иногда на каждую страницу делается отдельный файл со стилями. Поэтому, складировать все стили в один файл, или на одну страницу ну\nсовершенно  не желательно, а зачастую и невозможно.\nНу и в-третьих, вышеупомянутая возможность использовать единый файл (файлы) стилей для нескольких страниц без дублирования записей.\n \nВ этом случае мы просто подключаем файл тегом <code><link></code>, указав, что это именно описания стилей (\"stylesheet\"). Делается это также в заголовке документа:\n<listing>\n<head>\n<title></title>\n \n<link href=\"style.css\" rel=\"stylesheet\" />\n \n</head>\n<listing>\n \nВ данном случае файл style.css находится в корневом каталоге сайта. В случае его нахождения в подкаталоге, естественно, следует прописать полный путь."}],"Job":[{"PageNumber":1,"Content":"Создай пустой html файл с основными тегами\n<listing>\n<html>\n<head>\n    <title></title>\n    <meta charset=\"utf-8\"/>\n    <style>\n    </style>\n</head>\n<body>\n</body>\n</html>\n</listing>"},{"PageNumber":2,"Content":"Создадим блоки. Поместим внутрь текст для обозначения их предназначения.\n<listing>\n<div>header</div>\n<div>slider</div>\n<div>module</div>\n<div>module</div>\n<div>module</div>\n<div>footer</div>\n</listing>"},{"PageNumber":3,"Content":"Описания классов для всех основных блоков. Пока пустые.\n<listing>\n<style>\nbody {\n    font-family: Arial, sans-serif;\n}\n.header {\n}\n.slider {\n}\n.module1 {\n}\n.module2 {\n}\n.module3 {\n}\n.footer {\n}\n</style>\n</listing>"},{"PageNumber":4,"Content":"Зададим классы стилей для всех основных блоков\n<listing>\n<div class=\"header\">header</div>\n<div class=\"slider\">slider</div>\n<div class=\"module1\">module</div>\n<div class=\"module2\">module</div>\n<div class=\"module3\">module</div>\n<div class=\"footer\">footer</div>\n</listing>"}],"DescriptionText":"В этой задаче вы познакомитесь с проектом и приступите к выполнения своего первого проекта."},{"LessonNumber":5,"Title":"Разметка главных блоков страницы","Type":"task","Tags":"css[3], html[2]","Tech":"","Experience":"10","Comment":"","Description":[{"PageNumber":1,"Content":"Обзор задачи:\n- Показать границы будущих блоков\n- Обеспечить горизонтальное выравнивание содержимого\n\nТебе потребуется:\n- Способы установки стилей\n- HTML атрибуты\n- border\n- div"},{"PageNumber":2,"Content":"<author role=\"mentor\">\nПринцип работы с версткой от большего к меньшему. Сначала мы займемся базовыми вещами: каркас приложения, основные блоки и их выравнивание. Далее будем углубляться в мелкие детали.\n</author>"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"CSS Стили\nВ этом разделе рассмотрим несколько примеров установки стилей при помощи атрибута style.\nКаждый элемент имеет свой стиль по умолчанию, например цвет фона белый, а цвет шрифта - черный.\nИзменение стиля html-элемента может быть сделано при помощи атрибута style\nВот пример смены фона.\n<listing>\n<body style=\"background-color:lightgrey\">\n<h1>Заголовок</h1>\n<p>Какой-то текст параграфа</p>\n</body>\n</listing>\nАтрибут стиля имеет такой синтаксис:\n<listing>\nstyle=\"property:value\"\n</listing>\nЭто свойство и значение в соответствии с синтаксисом CSS\n<h2>Color</h2>\nСвойство color определяет цвет текста внутри html-элемента.\n<listing>\n<body>\n<h1 style=\"color:blue\">Синий заголовок</h1>\n<p style=\"color:red\">Красный параграф</p>\n</body>\n</listing>\n<h2>HTML Fonts</h2>\nCSS свойство font-family определяет шрифт, который будет использован внутри HTML-элемента:\n<listing>\n<body>\n<h1 style=\"font-family:verdana\">Какой-то заголовок</h1>\n<p style=\"font-family:courier\">Текст параграфа</p>\n</body>\n</listing>\nРазмер текста\nCSS свойство font-size определяет размер шрифта, который будет использован внутри html-элемента.\n<listing>\n<body>\n<h1 style=\"font-size:30px\">Заголовок</h1>\n<p style=\"font-size:16px\">Текст параграфа</p>\n</body>\n</listing>"},{"Id":0,"PageNumber":2,"Content":"</h1>HTML Аттрибуты</h1>\nАтрибуты задают дополнительную информация о html элементе\nHTML элементв могут иметь атрибуты, а могут и не иметь.\nАтрибуты всегда определяются в стартовой теге html-элемента.\nАтрибуты задаются в виде пар имя/значение примерно так: имя=\"значение\"\n<h2>Атрибут lang</h2>\nАтрибут языка документа который может быть определен внутри тега <html>\nОпределение языка важно для адаптивных приложения и поисковиков.\nDeclaring a language is important for accessibility applications (screen readers) and search engines:\n<listing>\n<!DOCTYPE html>\n<html lang=\"en-US\">\n<body>\n<h1>My First Heading</h1>\n<p>My first paragraph.</p>\n</body>\n</html>\n</listing>\nПервые две буквы задают язык (en), если имеет место диалект, то через дефис можно задать и его (US).\n<h2>Атрибут title</h2>\nHTML параграфы определяются тегом <p>.\nВ примере ниже <p> имеет атрибут title с неким значением.\n<listing>\n<p title=\"About W3Schools\">\nCompilisto - сайт для обучения программированию и информаионным технологиям,\nвключая HTML, CSS, JavaScript, XML, SQL, PHP, ASP и так далее.\n</p>\n</listing>\nКогда вы наведете курсор мыши на элемент, значение title покажется в тултипе поверх элемента.\n<h2>Атрибут href</h2>\nВот еще один популярный пример.\nСсылки в HTML определяются в помощью тега <a>. Адрем ссылки (то есть куда будет сделан переход) определяется в арибуте href\n<listing>\n<a href=\"http://www.google.com\">Перейти в поиск</a>\n</listing>\n<h2>Атрибуты размера</h2>\nВ HTML картинки задаются тегом <img>.\nИмя картинки задается параметром src, также размер в пикселях.\n<listing>\n<img src=\"avatar.jpg\" width=\"100\" height=\"120\">\n</listing>\nЕсли размеры width и height не указаны, будет показана картинка в своем натуральном размере.\n<h2>Атрибут alt</h2>\nalt задает альтернативный текст, который будет показан если HTML элемент не будет отображен.\n<listing>\n<img src=\"avatar.jpg\" alt=\"аватар пользователя\" width=\"90\" height=\"80\">\n</listing>\n<h2>Рекомендации</h2>\nИспользуйте нижний регистр для написания имен атрибутов. Хотя и верхний позволяется.\nВсегда используйте кавычки для значения атрибута, желательно двойные.\n<h2>Другие атрибуты</h2>\nВажнейшими атрибутами являются id, class и style. Им посвящены отдельные разделы.\nВообще можно придумать и использовать любой атрибут для своих разработки. \n<listing>\n<img src=\"avatar.jpg\" data-userId=\"1234567\" width=\"100\" height=\"120\">\n</listing>\nТакие атрибуты типа data-* часто используют для работы с javascript. Но это тема другой главы."},{"Id":0,"PageNumber":3,"Content":"<code>border</code> - это свойство для установки границ элемента. По сути оно является сокращением для установки многих свойств сразу (<code>border-width</code>, <code>border-style</code> и <code>border-color</code>).\nПример установки однопиксельной красной границы вокруг элемента:\n<listing>\nelement { \nborder: 1px solid #f00;\n}\n</listing>"},{"Id":0,"PageNumber":4,"Content":"Современная верстка основана на этом теге. <code><div></code>, являясь тегом-контейнером, группирует прочие элементы для удобства\nзадания их единого оформления. Условно, можно поделить действие применяемых к <code><div></code> свойств на воздействуюшие на сам <code><div></code, и воздействующие\nна его контент\nК первым можно отнести свойства позиционирования (margin), отображения (display), оформления (border, box-shadow, background-color и прочие). Ко вторым, например, отступы (padding), оформление шрифта (color, font-size, font-family), положение\nконтента (text-align, float).\n \nДля начала продемонстрируем роль <code><div></code как контейнера для прочих элементов. \nПредположим, нам надо ввести несколько названий с отступом слева в 10 пикселей. Это можно сделать так:  \n<listing>\n<label style=\"left:10px;\">Название 1</label>\n<label style=\"left:10px;\">Название 2</label>\n<label style=\"left:10px;\">Название 3</label>\n<label style=\"left:10px;\">Название 4</label>\n<label style=\"left:10px;\">Название 5</label>\n<label style=\"left:10px;\">Название 6</label>\n</listing>\n \nНо теперь, когда мы знаем про <code><div></code>, эту запись можно сделать намного лаконичнее. Вот так:\n \n<listing>\n<div style=\"left:10px;\">\n<label>Название 1</label>\n<label>Название 2</label>\n<label>Название 3</label>\n<label>Название 4</label>\n<label>Название 5</label>\n<label>Название 6</label>\n</div>\n</listing>\n \nТеперь нам не надо прописывать оформление для каждой записи - достаточно сделать это для <code><div></code. Дополним наш пример, сделаем сам текст белым, а фон - синим. Кроме того, добавим рамку всему блоку, а\nчтобы текст не прижимался к рамке, добавим поля в 15 пикселов со всех сторон:\n \n<listing>\n<div style=\"left:10px; background-color: blue; color: white; border:1px solid silver; padding: 15px;\">\n<label>Название 1</label>\n<label>Название 2</label>\n<label>Название 3</label>\n<label>Название 4</label>\n<label>Название 5</label>\n<label>Название 6</label>\n</div>\n</listing>\n \nТегу также можно присвоить свой идентификатор, id, с которым могут работать скрипты. Эта возможность активно используется скриптами - программным кодом, который выполняется на клиентском компютере - и широко применяется\nдля создания анимации и визуальных эффектов. \n \nОдно из важных свойств, влияющее на поведение <code><div></code - это display. Им задается, как именно будут выводится блоки - в линию, вертикально (по умолчанию), и как себя будет вести его контент. Советуем ознакомится\nс этим свойством, это поможет вам избежать \"изобретения  велосипеда\" своими силами."}],"Job":[{"PageNumber":1,"Content":"Нужно добавить внутрь каждого блока (header, slider и так далее) новый блок с классом content. Это подготовит верстку к выравниванию.\n<listing>\n<div class=\"header\">\n        <div class=\"content\">header</div>\n    </div>\n    <div class=\"slider\">\n        <div class=\"content\">slider</div>\n    </div>\n    <div class=\"module1\">\n        <div class=\"content\">module1</div>\n    </div>\n    <div class=\"module2\">\n        <div class=\"content\">module2</div>\n    </div>\n    <div class=\"module3\">\n        <div class=\"content\">module3</div>\n    </div>\n    <div class=\"footer\">\n        <div class=\"content\">footer</div>\n    </div>\n</listing>"},{"PageNumber":2,"Content":"Класс content будет отвечать за выравнивание. Следует указать свойство <code>margin</code> таким образом, чтобы все блоки с классом content выравнивались по горизонтали.\n.content {\n            margin: 0 auto;\n        }\n</listing>\nСделать <code>border</code>, чтобы было видно как располагаются блоки.\n.content {\n            border: solid 1px;\n        }\n</listing>\nОпредели значение <code>width</code> content. Оно будет фиксированным и меняться не будет.\n<listing>\n.content {\n            width: 900px;\n        }\n</listing>"},{"PageNumber":3,"Content":"Теперь надо поставить высоту основных блоков. Высоту надо померить с помощью макета: сколько каждый <code>div</code> занимает по высоте места. А цвета просто так можно поставить, чтобы наглядно видны были границы.\n<listing>\n.header {\n            height: 110px;\n            background-color: #fff;\n        }\n        .slider {\n            height: 400px;\n            background-color: #888686;\n        }\n        .module1 {\n            height: 400px;\n            background-color: #e3dcd3;\n        }\n        .module2 {\n            height: 600px;\n            background-color: #a2c6e3;\n        }\n        .module3 {\n            height: 350px;\n            background-color: #a69f99;\n        }\n        .footer {\n            height: 370px;\n            background-color: #1895e3;\n        }\n</listing>"},{"PageNumber":4,"Content":"Должен получиться примерно вот такой результат:\n<img src=\"/images/taskB.png\" width=\"200px\"/>"}],"DescriptionText":"Создадим первые блоки и стили для сайта."},{"LessonNumber":6,"Title":"Определить цвета блоков","Type":"task","Tags":"css[3]","Tech":"","Experience":"3","Comment":"","Description":[{"PageNumber":1,"Content":"Обзор задачи:\n- Задай реальные цвета блоков, как указано на макете.\n\nТебе потребуется:\n- background-color\n- Средство определения цвета"},{"PageNumber":2,"Content":"<author role=\"mentor\">\nОбрати внимание, что для блока .slider тоже надо указать цвет фона, хотя там будет картинка. Цвет должен быть наиболее близок к цвету фоновой картинки.\n<quiz>{\"type\": \"checkbox\", \"tags\": \"\", \"question\": \"Как думаешь зачем нужно указать фон для div, если уже имеется фоновая картинка?\", \"choice\": [\"Требование стандарта html\",\"Пока картинка грузится, дизайн будет выглядеть наиболее оптимально\",\"Если картинку не удастся загрузить, будет показан наиболее близкий цвет\"],\"answer\": \"1,2\", \"explanation\": \"Фон будет виден пока грузится картинка (особенно, если она большая и тяжелая), либо она будет удалена с сервера и не будет загружена. В обоих случаях внешний вид страницы будет оптимальным\"}</quiz>\n</author>"}],"Tutorial":[{"PageNumber":1,"Content":"background-color - это CSS свойство устанавливает цвет фона элемента.\nЗначение по-умолчанию: transparent (прозрачный).\nНиже перечислены возможные варианты задания цвета с помощью свойства background-color.\nПример\n<listing>\n.oneDiv {\nwidth: 150px;\nheight: 20px;\nbackground-color: #ee7799;\n}\n</listing>\n<style>\n.oneDiv {\nwidth: 150px;\nheight: 20px;\nbackground-color: #ee7799;\n}\n</style>\n<div class=\"oneDiv\">Text inside</div>\nПримеры установки цвета в различных форматах:\n<listing>\nbackground-color: yellow;\nbackground-color: rgb(128, 255, 128);\nbackground-color: hsla(50, 33%, 25%, 0.75);\nbackground-color: currentColor;\nbackground-color: transparent;\nbackground-color: #44aaf0;\nbackground-color: inherit;\n</listing>"}],"Job":[{"PageNumber":1,"Content":"Найди способ как определить цвет каждого раздела в картинке, например:\n<listing>\nhttp://inettools.net/ru/application/pixelcolor\n</listing>"},{"PageNumber":2,"Content":"Задай цвета для каждого из блоков от header до footer. Воспользуйся известным тебе свойством background-color.\n<listing>\n.header {\n            height: 110px;\n            background-color: #fff;\n        }\n        .slider {\n            height: 400px;\n            background-color: #fff;\n        }\n        .module1 {\n            height: 400px;\n            background-color: #046cc1;\n        }\n        .module2 {\n            height: 600px;\n            background-color: #f4f4f4;\n        }\n        .module3 {\n            height: 350px;\n            background-color: #046cc1;\n        }\n        .footer {\n            height: 370px;\n            background-color: #000;\n        }\n</listing>"}],"DescriptionText":"Поработаем с цветом фона"},{"LessonNumber":7,"Title":"Header","Type":"task","Tags":"css[5], html[5]","Tech":"","Experience":"12","Comment":"","Description":[{"PageNumber":1,"Content":"Обзор задачи:\n- Скачать логотип и добавить его в проект\n- Добавить логотип в html документ, обернув его тегом <code><a></code>\n- Добавить текстовые метки в контейнер <code><div></code> и выровнять\n- Выставить отступы для header\n\nТебе потребуется:\n- Box Model\n- display\n- text-align\n\nЛоготип:\n<a href=\"/images/logo.png\">Скачать</a>"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"<h1>CSS Box Model</h1>\nЭта одна из ключевых тем в верстке.\nКаждый html-элемент представляет из себя как-бы невидимую многослойную коробку, прямоугольник.\n<img src=\"box_model.gif\"/>\nПеречислим эти слои:\nborder - это видимая граница вокруг html-элемента. По умолчанию - прямоугольник. Если вы не зададите стили для border, то по-умолчанию его не видно.\nmargin - это отступ снаружи border\npadding - определяет отступы внутри границы border\n<listing>\np {\nborder:1px solid black;\npadding:10px;\nmargin:30px;\n}\n</listing>\nНажмите \"Проверить элемент\" в chrome и во вкладке Styles внизу можно увидеть box-model каждого html-элемента.\n<img src=\"chrome_box_model.png\"/>\nКак можно видеть отступы задаются с четырех сторон.\nВ примере выше свойство padding:10px; задает все четыре отступа. Но можно задавать отступы только для нужной стороны:\n<listing>\np {\nborder:1px solid black;\npadding-top:10px;\npadding-bottom:5px;\nmargin-left:30px;\nmargin-right: 40px;\n}\n</listing>\nЧасто используютс такой упрощенный синтаксис:\n<listing>\npadding: 10px 5px 10px 0;\n</listing>\nгде по-порядку: padding-top, padding-right, padding-bottom, padding-left."},{"Id":0,"PageNumber":2,"Content":"Свойство CSS <code>text-align</code> задает выравнивание текста внутри элемента, например, внутри <code><div></code>, <code><p></code> или ячейки таблицы . Наиболее актуальные значения, принимаемые свойством:\n  - center - выравнивание по центру. Этот способ активно используется в заголовках и подписях к картинкам.\n  - right - выравнивание по правому краю блока. Как правило, используется в коротких текстах, наподобие контактных данных.\n  - justify - выравнивание по ширине. В этом случае и левый, и правый край текста ровные, но для достижения этого браузер добавляет пробелы в текст, поэтому употреблять следует с осторожностью.\n  - left - выравнивание по левому краю. Правая сторона в этом случае получается неровной. Это наиболее популярный сегодня способ выравнивания текста, поскольку читающему легко отыскивать новую\nстроку, а также читать большие объемы текста.\n \nПример:\n<listing>\n<div style=\"text-align:center;\">\nЭтот текст будет выровнян по центру\n</div>\n</listing>"},{"Id":0,"PageNumber":3,"Content":"Свойство css <code>display</code> определяет, как элемент будет показан на странице. Свойство имеет очень много\nвариантов использования, которые вы можете осваивать по мере потребности. Сейчас же рассмотрим наиболее часто встречающиеся\nиз них. Кроме того, они поддерживаются всеми браузерами.\n- block - элемент показывается как блочный. Применение этого значения для встроенных \nэлементов заставляет его вести подобно блокам — происходит перенос строк в начале и в конце содержимого.\n- none - не выводит элемент в документе. Занимаемое им место \nне резервируется и веб-страница формируется так, словно элемента и не было. <b>Примечание</b>: изменить значение \nи сделать вновь видимым элемент можно с помощью скриптов. В этом случае происходит перестроение страницы с\nучетом вновь добавленного элемента.\n- list-item - элемент выводится как блочный, но добавляется маркер списка.\n- inline - элемент отображается как встроенный. Использование блочных\nтегов, таких как <div> и <p>, автоматически создает перенос и показывает содержимое этих тегов с новой строки. Значение\ninline отменяет эту особенность, поэтому содержимое блочных элементов начинается с того места, где окончился предыдущий элемент.\nПродемонстрируем. Вот листинг:\n<listing>\n<div style=\"display:block;\">Это первый блок</div>\n<div style=\"display:block;\">Это второй блок. Как видите, этот блок автоматически создал перенос, и вывелся на новой строке</div>\n</listing>\nСкопировав этот текст в html страничку, вы заметите, что блоки расположены вертикально.\nТеперь поместим элементы в одной строке, поменяв значение атрибута <code>display</code>\n<listing>\n<div style=\"display:inline;\">Это первый блок</div>\n<div style=\"display:inline;\">Это второй блок</div>\n</listing>"}],"Job":[{"PageNumber":1,"Content":"Добавь в header логотип <code><img></code>, сделав из него ссылку <code><a></code>.\nПомни, что все элементы должны находиться внутри content для выравнивания.\n<listing>\n<div class=\"header\">\n        <div class=\"content\">\n            <a href=\"#\">\n                <img src=\"i/logo.png\"/>\n            </a>\n        </div>\n    </div>\n</listing>"},{"PageNumber":2,"Content":"Далее добавим блок с двумя текстовыми элементами: телефоном и городом.\n<listing>\n<div class=\"header\">\n        <div class=\"content\">\n            <a href=\"#\">\n                <img src=\"i/logo.png\"/>\n            </a>\n            <div class=\"nav_container\">\n                <span class=\"nav_link\">8-800-2000-50</span>\n                <span class=\"nav_link\">г. Москва</span>\n            </div>\n        </div>\n    </div>\n</listing>\nПока выглядит не очень и пора заняться стилями."},{"PageNumber":3,"Content":"Надо расположить nav_container в одну строку с логотипом.\n<listing>\n.nav_container {\n            display: inline-block;\n        }\n</listing>"},{"PageNumber":4,"Content":"Выровняй этот текст по правому краю. Предлагаю увеличить ширину nav_container и сделать text-align.\n<listing>\n.nav_container {\n            display: inline-block;\n            width: 700px;\n            text-align: right;\n        }\n</listing>"},{"PageNumber":5,"Content":"Надо добавить отступы между строками\n<listing>\n        .nav_link {\n            padding: 10px;\n        }\n</listing>"},{"PageNumber":6,"Content":"Добавить отступы <code>padding</code> для класса header. Это позволит расположить лого в нужном положении, по середине блока-заголовка.\nКстати, <code>height</code> больше не нужен в классе header. Высота теперь определяется картинкой и отступами.\n<listing>\n.header {\n            /*height: 110px; Удаляем, так как теперь высота формируется на основе лого и паддингов */\n            background-color: #fff;\n            padding: 27px 0 27px;\n        }\n</listing>"}],"DescriptionText":"Разрабатываем верхний блок сайта: логотип и контактные данные. Знакомимся с inline элементами и применяем выравнивание."},{"LessonNumber":8,"Title":"Slider","Type":"task","Tags":"css[3], html[2]","Tech":"","Experience":"7","Comment":"","Description":[{"PageNumber":1,"Content":"Обзор задачи:\n- Скачать фон и установить для блока\n- Установить текст и задать ему стили\n\nТебе потребуется:\n- span\n- background-color\n- background-image\n- background-position\n- background-size\n- font-size\n\nРесурсы:\n<a href=\"/images/slide1.jpg\">Фон</a>"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"Тег <code>span</code> позволяет переопределить оформление элемента внутри других тегов, например, подчеркнуть выжное слово в тексте.\nСделаем акцент на ключевых словах в рекламном объявлении, сделав их жирными:\n \n<listing>\nВнимание! Только <span style=\"font-weight:bold;\">на этой неделе</span> скидки на детские товары! Вы можете\nприобрести со <span style=\"font-weight:bold;\">скидками</span> в нашем магазине <span style=\"font-weight:bold;\">подгузники, детское питание, игрушки</span> в ассортименте   \n</listing>\n \nВ отличии от <code><div></code> или <code><p></code> это не блочный тег, он не инициирует переноса последующих элементов на новую строку."},{"Id":0,"PageNumber":2,"Content":"background-color - это CSS свойство устанавливает цвет фона элемента.\nЗначение по-умолчанию: transparent (прозрачный).\nНиже перечислены возможные варианты задания цвета с помощью свойства background-color.\nПример\n<listing>\n.oneDiv {\nwidth: 150px;\nheight: 20px;\nbackground-color: #ee7799;\n}\n</listing>\n<style>\n.oneDiv {\nwidth: 150px;\nheight: 20px;\nbackground-color: #ee7799;\n}\n</style>\n<div class=\"oneDiv\">Text inside</div>\nПримеры установки цвета в различных форматах:\n<listing>\nbackground-color: yellow;\nbackground-color: rgb(128, 255, 128);\nbackground-color: hsla(50, 33%, 25%, 0.75);\nbackground-color: currentColor;\nbackground-color: transparent;\nbackground-color: #44aaf0;\nbackground-color: inherit;\n</listing>"},{"Id":0,"PageNumber":3,"Content":"<code>background-image</code> - это css свойство устанавливает одно или несколько фоновых изображений для элемента.\nПорядок отрисовки такой: сначала рисуется фоновый цвет, если определен (свойство <code>background-color</code>). Затем фоновый рисунок, если задан (свойство <code>background-image</code>). Потом borders, если определены (свойство <code>border</code>).\nТакие свойства как <code>background-clip</code>, <code>background-origin</code> и <code>background-repeat</code> устанавливают способы раположения и отрисовки фонового изображение.\nПример:\n<listing>\ndiv {\nbackground-image: url(\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\");\n}\n</listing>\nОтсутствие фоновой картинки:\n<listing>\ndiv {\nbackground-image: none;\n}\n</listing>\nНесколько картинок. Которые вначале - выше.\n<listing>\ndiv {\nbackground-image: url(\"https://developer.mozilla.org/samples/cssref/images/startransparent.gif\"), \nurl(\"https://mdn.mozillademos.org/files/7693/catfront.png\");\nbackground-color: transparent;\n}\n</listing>"},{"Id":0,"PageNumber":4,"Content":"<code>background-position</code> устанавливает начальную позицию фонового изображения от исходной точки.\nИсходная точка устанавливается другим свойством <code>background-origin</code>.\nМожно использовать координаты в пикселях и процентах относительно левого верхнего угла.\nА можно константы выравнивания.\nМного примеров:\n<listing>\nbackground-position: 25% 50%;\nbackground-position: 10px 0px;\nbackground-position: top;\nbackground-position: bottom;\nbackground-position: left;\nbackground-position: right;\nbackground-position: center;\n</listing>"},{"Id":0,"PageNumber":5,"Content":"<code>background-size</code> позволяет управлять размером фоновых изображений.\nРазмер можно определить в пикселях, процентах и других единицах, или с использованием двух ключевых слов \"cover\" и \"contain\".\n<listing>\n#div1 {\nbackground: url(img_flower.jpg);\nbackground-size: 100px 80px;\nbackground-repeat: no-repeat;\n}\n</listing>\n\"Contain\" - делает изображение максимально большим, но при условии что оно полностью останется внутри зоны контента. Поэтому часть фона может остаться непокрытой.\n\"Cover\" - масштабрует изображение таким образом, что контентная область элемента полностью перекрывается изображением. Однако в таком случае часть самого изображения может остаться невидимой.\nРазличие показано на рисунке:\n<img src=\"cover_contain.jpg\">"},{"Id":0,"PageNumber":6,"Content":"Свойство css font-size устанавливает размер шрифта. Это можно сделать с помощью:\n \n1) констант xx-small, x-small, small, medium, large, x-large, xx-large, устанавливающих абсолютный размер шрифта;\n2) констант larger, smaller, устанавливающих относительный разме шрифта\n 3) стандартными единицами css: пикселями(px), пунктами(pt), процентами(%), высотой шрифта элемента (em).\n\n<listing> \n<span style=\"font-size:16px;\">Пример текста высотой 16 пикселов</span>\n</listing>"}],"Job":[{"PageNumber":1,"Content":"Добавим текст в блоке slider. Предложу добавить <code>div</code>, а внутри него <code>span</code>. Даже два <code><span></code> ведь там два разных стиля.\n<listing>\n    <div class=\"slider\">\n        <div class=\"content\">\n            <div class=\"slider_text\">\n                <span>Восстановление любых</span></br><span class=\"slider_text blue\">цифровых устройств</span>\n            </div>\n        </div>\n    </div>\n</listing>"},{"PageNumber":2,"Content":"Используй <code>padding</code> <code>font-size</code> <code>width</code> <code>color</code> для настройки внешнего вида текста. Логично, что для синего <code>span</code> надо использовать отдельный класс:\n<listing>\n.slider_text {\n            padding: 40px 0 0 0;\n            font-size: 70px;\n            width: 200px;\n        }\n        .blue {\n            color: #046cc1;\n        }\n</listing>"},{"PageNumber":3,"Content":"Настроим фон для блока слайдера. Проверь, как поведет себя фон при изменении размеров окна браузера.\n<listing>\n.slider {\n            height: 400px;\n            background-image: url(i/slide1.jpg);\n            background-size: cover;\n            background-position: center;\n        }\n</listing>"}],"DescriptionText":"Делаем большой рекламный блок. Работаем со свойствами для настройки background"},{"LessonNumber":9,"Title":"Сверстать колонки в третьем блоке","Type":"task","Tags":"css[7], html[4]","Tech":"","Experience":"10","Comment":"","Description":[{"PageNumber":1,"Content":"Обзор задачи:\n-Организовать колонки\n-Выровнять их и подобрать ширину\n\nТебе потребуется:\n- a\n- float\n- clear\n- color\n- line-height\n- text-transform"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"<a>\nHTML элемент <code><a></code> служит для задания гиперссылки. A - это сокращение от html anchor.\n<h2>Пример обычной текстовой ссылки</h2>\n<listing>\n<a href=\"http://www.google.com/\">\nExternal Link\n</a>\n</listing>\n<h2>Кликабельная картинка</h2>\n<listing>\n<a href=\"http://google.com\" target=\"_blank\">\n<img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Logo_Google_2013_Official.svg/220px-Logo_Google_2013_Official.svg.png\" alt=\"Google logo\" />\n</a>\n</listing>\n<h2>E-mail link</h2>\nС помощью такой ссылки будет открыт e-mail клиент на компьютере пользователя.\n<listing>\n<a href=\"mailto:nowhere@mail.org\">Send email to anybody</a>\n</listing>\n<h2>Переход внутри страницы</h2>\nПереход будет сделать к элементу с атрибутом id=\"chapter1\"\n<listing>\n<a href=\"#chapter1\">К главе 1</a>\n</listing>\nМожно использовать специальную ссылку #top для перехода в начало страницы.\n<h2>Атрибуты</h2>\nhref - это единственный обязательный атрибут, урл, обозначающий куда будет сделан переход.\ntarget - этот атрибут определяет где отобразить открываемый документ.\n_self: открывается в том же окне. Это значение по умолчанию.\n_blank: открывает ресурс в новом окне."},{"Id":0,"PageNumber":2,"Content":"Еще один часто встречающееся свойство CSS - <code>float</code>. Его\nпрямое назначение - задавать, по какой стороне будет выравниваться элемент. При этом остальные \nэлементы будут обтекать его с другой стороны. Типичный пример - обтекание картинки текстом.\n<listing>\n<p>\n<div>Блок с фото</div>\nDuis autem dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu\nfeugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent \nluptatum zzril delenit au gue duis dolore te feugat nulla facilisi.\n</p>\n</listing>\nБез использования <code>float</code> текст будет начинаться ниже картинки, со следующей строки.\nИспользуем <code>float</code> со значением <code>right</code>\n<listing>\n<div style=\"float:right;\">Блок с фото</div>\n</listing>\nТеперь картинка и текст находятся на одной линии, согласно свойсту <code>float</code> картинка прижата к правому краю страницы.\nИзменим код:\n<listing>\n<div style=\"float:left;\">Блок с фото</div>\n</listing>\nА теперь картинка слева.\nОднако, float не так прост, как кажется, и имеет свои особенности. С этим вы столкнетесь, когда будете изучать совместную работу<code>float</code> с несколькими элементами"},{"Id":0,"PageNumber":3,"Content":"<h2>color</h2>\nЭто свойство используется для устновки цвета текста.\nПример:\n<listing>\n<div style=\"color:blue\">\nFirst fragment\n<div style=\"color:#ff5522\">\nSub fragment.\n</div>\n</div>\n</listing>\n<div style=\"color:blue\">\nFirst fragment\n<div style=\"color:#ff5522\">\nSub fragment.\n</div>\n</div>\nСпособов задать цвет в вебе множество:\n<listing>\ncolor: #FF0033;\ncolor: rgb(255,0,51);\ncolor: rgba(255,0,0,0.7);\ncolor: hsl(0, 100%,50%);\ncolor: transparent;\ncolor: tomato;\n</listing>\nНаиболее частый это задание цвета через его шестнадцатиричное значение, например #FF0033. наиболее компактная и удобная запись. Все средства определения цвета могут сформировать такое значение.\nСсылки:\n<a href=\"https://ru.wikipedia.org/wiki/%D0%A6%D0%B2%D0%B5%D1%82%D0%B0_HTML\">Цвета HTML</a>"},{"Id":0,"PageNumber":4,"Content":"Свойство <code>line-height</code>  устанавливает межстрочный интервал текста. При обычных обстоятельствах расстояние\nмежду строками зависит от вида и размера шрифта, и определяется браузером автоматически. Отрицательное значение межстрочного расстояния не допускается.\nПример написания:\n<listing>\n<p style=\"line-height:1.5;\">\nздесь задан полуторный межстрочный интервал\nздесь задан полуторный межстрочный интервал \nздесь задан полуторный межстрочный интервал \n</p>\n</listing>\n \nИнтервал можно задать не только числовым множителем, как в примере, но и прочими, принятыми в css, единицами - процентами (%), пунктами (pt), дюймами (in).\nТакже имеются стандартные значения свойства: normal - интервал  вычисляется автоматически, и inherit - используется значение родителя элемента."},{"Id":0,"PageNumber":5,"Content":"Свойство управляет преобразованием текста элемента в заглавные или прописные символы. \nОсновные значения свойства:\n  - capitalize - делает первый символ каждого слова заглавным. Заметьте, не первую букву в абзаце, а именно в каждом слове;\n   - lowercase -  все символы становятся строчными;\n   - uppercase - все символы становятся прописными.\n\nСвойство имеет смысл задавать там, где регистр написания принципиален. Как бы ни был введен текст, он будет отображен на странице именно так, как надо."}],"Job":[{"PageNumber":1,"Content":"Предлагаю колонки делать с помощью <code><div></code> с использованием CSS свойства <code>float: left;</code>\nДобавь три колонки в module1, не забудь про элемент clear, чтобы сделать переход на новую строку.\n<listing>\n<div class=\"module1\">\n<div class=\"content\">\n            <div class=\"column\">\n                \n            </div>\n            <div class=\"column\">\n                \n            </div>\n            <div class=\"column\">\n                \n            </div>\n            <div class=\"clear\"></div>\n</div>\n</div>\n</listing>"},{"PageNumber":2,"Content":"Далее как видно из макета в каждой колонке есть три элемента: заголовок, текст, кнопка. Давай добавим их.\n<listing>\n<div class=\"column_h_cnt\">Computer</br>Repare</div>\n                <div class=\"column_text_cnt white\">Lorem ipsum dolor sit amet conse ctetur adipisicing elit Lorem ipsum dolor sit amet conse ctetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse.</div>\n                <div class=\"btn_cnt\">\n                    <a href=\"http://google.com\" title=\"Read more\" class=\"btn\" target=\"_self\">Подробнее</a>\n</div>\n</listing>"},{"PageNumber":3,"Content":"Организуем колоночную верстку. Настрой CSS-классы column и clear. \n<listing>\n.column {\n            float: left;\n            padding: 40px 15px 40px 0;\n            width: 400px;\n        }\n.clear {\n            clear: both;\n        }\n</listing>"},{"PageNumber":4,"Content":"Как видно, сейчас ширина колонки слишком большая и она не умещается по ширине.\nПодберите ширину так, чтобы колонки соответствовали макету и умещались по ширине:\n<listing>\n.column {\n            float: left;\n            padding: 40px 15px 40px 0;\n            width: 282px;\n        }\n</listing>"},{"PageNumber":5,"Content":"Стилизуем тексты, у нас их два. Кнопки пока не трогаем.\n<listing>\n.column_h_cnt {\n            background-color: #000;\n            color: #fff;\n            font-size: 48px;\n            margin-bottom: 20px;\n            text-transform: uppercase;\n        }\n        .column_text_cnt {\n            margin-bottom: 20px;\n            font-size: 14px;\n            line-height: 1.5em;\n        }\n        .white {\n            color: #fff;\n        }\n</listing>"}],"DescriptionText":"Переходим к следующему блоку с колонками. Основная цель - научиться верстать колонки с помощью float:left"},{"LessonNumber":10,"Title":"Создать кнопки с эффектами при наведении","Type":"task","Tags":"css[3]","Tech":"","Experience":"5","Comment":"","Description":[{"PageNumber":1,"Content":"Описание задачи:\n-Сверстать кнопки в соответствии с дизайном\n-Установить стиль при наведении\n-Плавность изменения свойств\n\nТебе потребуются:\n- HTML Кнопки\n- transitions\n- hover"},{"PageNumber":2,"Content":"Речь идет о вот этой кнопке <code><a></code> которые ты уже сделал\n<listing>\n                <div class=\"btn_cnt\">\n                    <a href=\"http://google.com\" title=\"Read more\" class=\"btn\" target=\"_self\">Подробнее</a>\n                </div>\n</listing>"}],"Tutorial":[{"PageNumber":1,"Content":"Вы наверняка замечали, что перед нажатием на кнопку или ссылку на веб-странице происходит их видоизменение - появляется подчеркивание, меняется\nфон, изменяется тень. Эти эффекты при наведении курсора на элемент и задаются в <code>hover</code>. Допустим, у нас есть некая белая кнопка для отсылки данных:\n<listing>\n<html>\n<head>\n<title><title>\n \n<style>\ninput{\nwidth:150px;\nheight:30px;\ncolor: silver;\nbackground-color:white;\n}\n</style>\n</head>\n<input type=\"submit\" value=\"Отослать\">\n</html>\n</listing>\n \nДля того, чтобы кнопка поменяла цвет при наведении, а надпись стала толще, дополним стили:\n<listing>\n<style>\ninput{\nwidth: 150px;\nheight: 30px;\ncolor: silver;\nbackground-color: white;\n}\ninput:hover{\nbackground-color: aliceblue;\nfont-weight: bold;\n}\n</style>\n</listing>\nКак вы заметили, hover указывается через двоеточие после селектора элемента, и прописываются там только те свойства, которые подлежат изменению."}],"Job":[{"PageNumber":1,"Content":"Задай стиль кнопок в соответствии с дизайном на макете.\n<listing>\n.btn {\n            color: #fff;\n            padding: 14px 27px;\n            border: 2px solid #fff;\n            text-decoration: none;\n        }\n</listing>"},{"PageNumber":2,"Content":"<author role=\"mentor\">\nНадо задать стиль при наведении. Наверное, у тебя возник закономерный вопрос: А какой стиль? Он же нигде не показан.\nУточнил у дизайнера: цвет фона белый, цвет текста - такой же как и цвет фона всего блока.\n</author>\nСоздадим псевдокласс <code>hover</code>, который будет активироваться при наведении\n<listing>\n.btn:hover {\n            background-color: #fff;\n            color: #046cc1;\n        }\n</listing>"},{"PageNumber":3,"Content":"В завершении установить плавность установки свойств стилем <code>transition</code>:\n<listing>\n.btn {\n            color: #fff;\n            padding: 14px 27px;\n            border: 2px solid #fff;\n            text-decoration: none;\n            transition: all 0.5s ease;\n        }\n</listing>\nЭто будет означать, что все свойства класса btn будут плавно изменяться за полсекунды."}],"DescriptionText":"Реализуем небольшие эффектами при наведении на кнопки."},{"LessonNumber":11,"Title":"Сделать список сервисов в четвертом блоке","Type":"task","Tags":"css[5], html[5]","Tech":"","Experience":"10","Comment":"","Description":[{"PageNumber":1,"Content":"Описание задачи:\n-Подготовить колонки\n-Сделать список в первой колонке\n-Наполнить его фейковым контентом\n-Стилизовать\n\nТебе потребуется:\n- ul\n- li\n- Descendant Selectors"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"Тег <code><ul></code> создает маркированный список. Каждый элемент списка должен начинаться с тега <code><li></code>. Примененные\nк <code><ul></code> стили наследуются элементами <code><li></code>.\n\nПример:\n<listing>\n<ul>\n  <li>Иванов</li> \n<li>Петров</li>\n  <li>Сидоров</li> \n</ul>\n</listing>"},{"Id":0,"PageNumber":2,"Content":"Тег html <code><li></code> используется как дочерний для тега <code><ul></code>, или, реже, <code><ol></code>, и представляет\nсобой элемент списка. Наглядный пример:\n<listing>\n<ul>\n<li>Первый элемент списка</li>\n<li>Второй элемент списка</li>\n<li>Третий элемент списка</li>\n</ul>\n</listing>\nКак правило, оформление элементов осуществляется средствами CSS, Стили, примененные к <code><ul></code> или <code><ol></code>, также\nдействуют на <code><li></code>."},{"Id":0,"PageNumber":3,"Content":"<h2>Селектор потомка</h2>\nСелектор потомка (Descendant Selectors) имеет следующий общий вид:\n<listing>\nselector1 selector2 {\n}\n</listing>\nОн выбирает элемент отвечающий selector1, а потом внутри него все элементы подходящие под selector2. И к ним уже будут применены стили.\nПримеры\n<listing>\nspan {\nbackground-color: white;\n}\ndiv span {\nbackground-color: Blue;\n}\n<div>\n<span>Span 1.\n<span>Span 2.</span>\n</span>\n</div>\n<span>Span 3.</span>\n</listing>"}],"Job":[{"PageNumber":1,"Content":"Добавь две колонки. Ты уже умеешь это.\n<listing>\n<div class=\"module2\">\n        <div class=\"content\">\n            <div class=\"column_block3_1\">\n                \n            </div>\n            <div class=\"column_block3_2\">\n\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    </div>\n</listing>"},{"PageNumber":2,"Content":"Опишем классы для колонок. Ширина на основе макета. Но чтобы умещалась.\n<listing>\n.column_block3_1 {\n            width: 370px;\n            float: left;\n        }\n        .column_block3_2 {\n            width: 530px;\n            float: left;\n        }\n</listing>\nКласс clear уже описан, переиспользуем."},{"PageNumber":3,"Content":"Внутрь первой колонки добавь список <code><ul></code>. Элементами списка могут выступать любые теги. В данном случае <code><a></code>\n<listing>\n<div class=\"content\">\n            <div class=\"column_block3_1\">\n                <ul class=\"services_list\">\n                    <li><a href=\"./about\">Same Day In-Home Support</a></li>\n                    <li><a href=\"./portfolio\">Certified Technicians</a></li>\n                    <li><a href=\"./news\">Virus &amp; Spyware Removal</a></li>\n                    <li><a href=\"./about\">Wireless Networking</a></li>\n                    <li><a href=\"./portfolio\">On-site Engineers</a></li>\n                    <li><a href=\"./news\">AD, MS Exchange, SQL</a></li>\n                    <li><a href=\"./about\">Microsoft Certified</a></li>\n                    <li><a href=\"./portfolio\">Maintenance Contracts</a></li>\n                    <li><a href=\"./news\">Nationwide IT Workforce</a></li>\n                    <li><a href=\"./about\">OEM Hardware Installations</a></li>\n                </ul>\n            </div>\n            <div class=\"column_block3_2\">\n\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n</listing>"},{"PageNumber":4,"Content":"Далее надо настроить стили списка и его элементов.\n<listing>\n.services_list {\n            text-transform: uppercase;\n            margin-right: 19px;\n            padding: 0;\n        }\n        .services_list li {\n            line-height: 19px;\n            display: list-item;\n            height: 51px;\n            list-style-type: none;\n            margin-bottom: 3px;\n            width: 351px;\n            background-color: #000;\n        }\n</listing>"},{"PageNumber":5,"Content":"Добавить стили для кнопки <code><a></code> с применением селекторов типа родитель-потомок. То есть без присвоения <code><a></code> отдельного класса.\nИ про стиль при наведении не забудь. Цвет фона при наведении: #046cc1\n<listing>\n.services_list a {\n            color: #fff;\n            font-size: 18px;\n            display: block;\n            padding: 14px 20px 18px;\n            position: relative;\n        }\n        .services_list a:hover {\n            background-color: #046cc1;\n        }\n</listing>"}],"DescriptionText":"Снова нужно организовать колонки. А также будем использовать html списки. Для их стилизации нам потребуются продвинутые css селекторы."},{"LessonNumber":12,"Title":"Разработать список сервисов с описанием и иконкой","Type":"task","Tags":"css[5], html[5]","Tech":"","Experience":"10","Comment":"","Description":[{"PageNumber":1,"Content":"Описание задачи\n-Колонки со списками\n-Стилизовать заголовки\n-Использовать иконки\n-Настроить отступы и внешний вид\n\nРесурсы:\n<a href=\"/images/icons.zip\">Иконки</a>"}],"Tutorial":[{"PageNumber":1,"Content":""}],"Job":[{"PageNumber":1,"Content":"Давай сделаем заготовку. В колонке column_block3_2 создай заголовок <code>h2</code> и две колонки. В каждой колонке список <code><ul></code>\nВ каждом списке поставь столько <code>li</code> сколько надо по дизайну\n<listing>\n<div class=\"column_block3_2\">\n                <h2>Our Services</h2>\n                <div class=\"customer_column\">\n                    <ul class=\"customer_list\">\n                        <li>\n                            \n                        </li>\n                        <li>\n                            \n                        </li>\n                        <li>\n                            \n                        </li>\n                    </ul>\n                </div>\n                <div class=\"customer_column\">\n                    <ul class=\"customer_list\">\n                        <li>\n                            \n                        </li>\n                        <li>\n                            \n                        </li>\n                        <li>\n                            \n                        </li>\n                    </ul>\n                </div>\n                <div class=\"clear\"></div>\n            </div>\n</listing>"},{"PageNumber":2,"Content":"Задай стили заголовку <code>h2</code> по дизайну.\n<listing>\nh2 {\n            font-size: 36px;\n            text-transform: uppercase;\n            margin-bottom: 0;\n        }\n</listing>"},{"PageNumber":3,"Content":"Колонки и список стилизуем. Для списка только отступы надо поставить.\n<listing>\n.customer_list {\n            margin-right: 19px;\n            padding: 0;\n        }\n        .customer_column {\n            float: left;\n            width: 260px;\n        }\n</listing>"},{"PageNumber":4,"Content":"Самое время сделать элемент списка. Я бы собрал элемент списка из таких тегов: <code>img</code>, <code>span</code>, <code>br</code>\n<listing>\n<li>\n                            <img class=\"customer_icon\" src=\"i/data7.png\"/>\n                            <span class=\"customers_h\">LOREM IPSUM DOLOR SIT</span>\n                            </br>\n                            Sit amet conse ctetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                        </li>\n</listing>\nРасставь шесть иконок в соответствии с дизайном."},{"PageNumber":5,"Content":"Иконки большие. Уменьши их.\n<listing>\n.customer_icon {\n            width: 30px;\n        }\n</listing>"},{"PageNumber":6,"Content":"Ну и текстом займемся. Я бы создал общее правило для всего текста типа \".customer_list li\" и отдельно для заголовка .customers_h\n<listing>\n.customer_list li {\n            list-style-type: none;\n            font-size: 14px;\n            color: gray;\n            line-height: 1.7em;\n            padding-bottom: 20px;\n        }\n.customers_h {\n            text-transform: uppercase;\n            font-size: 19px;\n            color: #046cc1;\n            font-weight: bold;\n        }\n</listing>"}],"DescriptionText":"И снова списки, колонки и отступы. Также будем встраивать иконки для элементов списка."},{"LessonNumber":13,"Title":"Разработать блок рекомендаций с круглыми аватарками","Type":"task","Tags":"css[4], html[4]","Tech":"","Experience":"8","Comment":"","Description":[{"PageNumber":1,"Content":"Описание задачи:\n- Трех-колоночная структура\n- Разработать блок с аватаркой и текстом\n- Финальный вид и настройка\n\nТебе потребуется:\n- padding\n- margin\n- border-radius"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"<code>padding</code> является как-бы зеркальным близнецом свойства <code>margin</code>ю Если второй устанавливает внешние отступы от прочих элементов, то <code>padding</code> задает\n\"поля\" внутри блока. Например, вы заполняете каждую ячейку таблицы текстом. При этом тексты соседних ячеек соприкасаются, что и смотрится, и читается не очень хорошо. Чтобы\nсоздать отступы между краем ячейки и текстом и понадобится <code>padding</code>.  Зададим отступы в порядке сверху, справа, снизу, слева:\n \n<listing>\n<table>\n<tr>\n \n<td style=\"padding:15px 5px 0 10px;\">\nНесколько строчек текста Несколько строчек текста Несколько строчек текста Несколько строчек текста Несколько строчек текста\n</td>\n<td style=\"padding:15px 5px 0 10px;\">\nНесколько строчек текста Несколько строчек текста Несколько строчек текста Несколько строчек текста Несколько строчек текста\n</td>\n<tr>\n<table>\n</listing>\nВсе проще, если отступ должен быть одинаковый, тогда пишем просто\n<listing>\n<td style=\"padding:15px;\">\n</listing>\n Как и <code>margin</code>, тег можно записать полной формой.\n<listing>\n<td style=\"padding-top:15px; padding-right:5px; padding-bottom:0px; padding-left:10px;\">\n</listing>"},{"Id":0,"PageNumber":2,"Content":"margin - очень важное составное свойство css. Оно задает отступы между элементами на странице. Чтобы вам было понятнее, сформулируем задачу:\nтребуется установить у блока отступы сверху и слева по 50 пикселов. В этом случае можно использовать запись:\n<listing>\n<div style=\"margin-top 50px; margin:left:50px;\">Блок</div>\n</listing>\nЗадача выполнена! А теперь сделаем эту запись более лаконичной:\n<listing>\n<div style=\"margin:50px 0 0 50px;\">Блок</div>\n</listing>\nЕще проще, если со всех сторон нужны одинаковые отступы. Тогда запись будет еще короче:\n<listing>\n<div style=\"margin:50px;\">Блок</div>\n</listing>\n \n \n \nКак вы, наверно, уже поняли, свойство margin объединяет в себе 4 свойства, а именно margin-top, margin-right, margin-left и margin-bottom. Запись\nв виде margin: 10px 20px 30px 40px устанавливает соответствующие отступы сверху и по часовой стрелки, то есть 10 пикселов сверху, 20 справа,\n30 снизу и 40 слева. Эта запись равнозначна последовательности:\n<listing>\nmargin-top:10px;\nmargin-right:20px;\nmargin-left:40px;\nmargin-bottom:30px;\n</listing>"},{"Id":0,"PageNumber":3,"Content":"<code>border-radius</code> задает скругление углов у border.\nОно применяется ко всему фону, даже если значение border не указано, то есть нет видимой границы. Часть за границей будет отсечена и не будет показана.\nПример:\n<listing>\ndiv {\nborder: 1px solid yellow;\nborder-radius: 70px;\n}\n</listing>\nСвойство <code>border-radius</code> это сокращение от нескольких <code>border-top-left-radius</code>, <code>border-top-right-radius</code>, <code>border-bottom-right-radius</code> и <code>border-bottom-left-radius</code>, которые могут быть заданы по отдельности.\nСкруглять радиус можно до определенных пределов, после чего скругление границы достигнет максимального предела:\n<listing>\ndiv {\nborder: 1px solid #f00;\nborder-radius: 1000px;\nwidth: 50px;\nheight: 50px;\n}\n</listing>"}],"Job":[{"Id":0,"PageNumber":1,"Content":"Создай заготовку для блока рекомендаций. С уже привычными для тебя колонками. Ну и заголовок <code>h2</code> добавь.\n<listing>\n<div class=\"module3\">\n        <div class=\"content white\">\n            <h2 class=\"white\">Our testimonials</h2>\n            <div class=\"testim_col\">\n                \n            </div>\n            <div class=\"testim_col\">\n                \n            </div>\n            <div class=\"testim_col\">\n                \n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    </div>\n</listing>"},{"Id":0,"PageNumber":2,"Content":"Внутри колонки сформируем заготовку для аватарки <code><img></code>. Картинку надо поместить в <code>div</code>, чтобы настроить обтекание текста.\n<listing>\n<div class=\"testim_col\">\n                <div class=\"user_avatar_cnt\">\n                    <img class=\"user_avatar\" src=\"i/user1.png\"/>\n                </div>\n                Conse ctetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\n</div>\n</listing>"},{"Id":0,"PageNumber":3,"Content":"Все html-элементы добавлены. Теперь стили.\nЗадай отступы и ширину так, чтобы получилось по дизайну. Также размер шрифта и высоту линии.\n<listing>\n.testim_col {\n            width: 290px;\n            float: left;\n            margin: 15px 10px 0 0;\n            font-size: 14px;\n            line-height: 1.7em;\n        }\n</listing>"},{"Id":0,"PageNumber":4,"Content":"Текст должен обтекать картинку слева. И с отступом.\n<listing>\n.user_avatar_cnt {\n            float: left;\n            padding: 10px;\n        }\n</listing>"},{"Id":0,"PageNumber":5,"Content":"<quiz>{\"type\": \"radiobutton\", \"tags\": \"\", \"question\": \"Сделать круглые аватарки, как?\", \"choice\": [\"Взять и в фотошопе обрезать\",\"Сделать как-то с помощью стилей\"],\"answer\":\"1\", \"explanation\": \"Легче, конечно, стараться использовать css-стили.\nА если завтра в моде будут ромбообразные аватарки, тебе всего надо будет поменять одно css-правило, не трогая графику.\"}</quiz>"},{"Id":0,"PageNumber":6,"Content":"Круг получается путем задания свойства <code>border-radius</code> заведомо большего размера чем ширина. Попробуй.\n<listing>\n.user_avatar {\n            border-radius: 200px;\n            width: 120px;\n        }\n</listing>"},{"Id":0,"PageNumber":7,"Content":"В конце подкорректируем отступы у блока module3.\n<listing>\n.module3 {\n            /*height: 350px;*/\n            background-color: #046cc1;\n            padding: 20px 0 50px 0;\n        }\n</listing>\nПринудительную установку height теперь можно убрать, так как она формируется за счет контента внутри блока."}],"DescriptionText":"Приступаем к одному из последних блоков, блока рекомендаций. Сделаем несколько блоков, состоящих их круглой аватарки пользователя и текста."},{"LessonNumber":14,"Title":"Сделать футер","Type":"task","Tags":"css[3], html[3]","Tech":"","Experience":"6","Comment":"","Description":[{"PageNumber":1,"Content":"Описание задачи\n- Создать колонки в футере согласно макету\n- В каждой колонке создать список\n- Поработать над внешним видом"}],"Tutorial":[{"PageNumber":1,"Content":""}],"Job":[{"PageNumber":1,"Content":"Создай привычную колоночную структуру в футере.\n<listing>\n<div class=\"footer\">\n        <div class=\"content\">\n            <div class=\"footer_col\">\n                \n            </div>\n            <div class=\"footer_col\">\n                \n            </div>\n            <div class=\"footer_col\">\n                \n            </div>\n            <div class=\"footer_col\">\n                \n            </div>\n            <div class=\"clear\"></div>\n        </div>\n</listing>"},{"PageNumber":2,"Content":"В каждой колонке создай список <code><ul></code> с заголовком <code>h3</code>\n<listing>\n<h3 class=\"white\">navigation</h3>\n                <ul class=\"footer_list\">\n                    <li>Home</li>\n                    <li>About</li>\n                    <li>News</li>\n                    <li>Contacts</li>\n                </ul>\n</listing>"},{"PageNumber":3,"Content":"Настроим колонки футера и отступы:\n<listing>\n        .footer {\n            padding: 20px 0 20px;\n            background-color: #000;\n        }\n        .footer_col {\n            width: 220px;\n            float: left;\n        }\n</listing>"},{"PageNumber":4,"Content":"Стили списка приведи в соответствие с макетом:\n<listing>\n.footer_list {\n            margin-right: 19px;\n            padding: 0;\n        }\n        .footer_list li {\n            list-style-type: none;\n            font-size: 14px;\n            color: #046cc1;\n            padding-bottom: 20px;\n        }\n</listing>"},{"PageNumber":5,"Content":"Для заголовка <code>h3</code> последние штрихи.\n<listing>\nh3 {\n            text-transform: uppercase;\n            font-size: 19px;\n        }\n</listing>"}],"DescriptionText":"Футер последний самостоятельный блок на странице. Здесь все те же колонки и списки."},{"LessonNumber":15,"Title":"Добавить в футер ссылки","Type":"task","Tags":"css[2], html[1]","Tech":"","Experience":"3","Comment":"сделать переходы на другие страницы-заглушки","Description":[{"PageNumber":1,"Content":"Описание задачи:\n-Добавить ссылки в футер\n\nТебе потребуется:\n- hover\n- descendant selectors"}],"Tutorial":[{"Id":0,"PageNumber":1,"Content":"Вы наверняка замечали, что перед нажатием на кнопку или ссылку на веб-странице происходит их видоизменение - появляется подчеркивание, меняется\nфон, изменяется тень. Эти эффекты при наведении курсора на элемент и задаются в <code>hover</code>. Допустим, у нас есть некая белая кнопка для отсылки данных:\n<listing>\n<html>\n<head>\n<title><title>\n \n<style>\ninput{\nwidth:150px;\nheight:30px;\ncolor: silver;\nbackground-color:white;\n}\n</style>\n</head>\n<input type=\"submit\" value=\"Отослать\">\n</html>\n</listing>\n \nДля того, чтобы кнопка поменяла цвет при наведении, а надпись стала толще, дополним стили:\n<listing>\n<style>\ninput{\nwidth: 150px;\nheight: 30px;\ncolor: silver;\nbackground-color: white;\n}\ninput:hover{\nbackground-color: aliceblue;\nfont-weight: bold;\n}\n</style>\n</listing>\nКак вы заметили, hover указывается через двоеточие после селектора элемента, и прописываются там только те свойства, которые подлежат изменению."},{"Id":0,"PageNumber":2,"Content":"<h2>Селектор потомка</h2>\nСелектор потомка (Descendant Selectors) имеет следующий общий вид:\n<listing>\nselector1 selector2 {\n}\n</listing>\nОн выбирает элемент отвечающий selector1, а потом внутри него все элементы подходящие под selector2. И к ним уже будут применены стили.\nПримеры\n<listing>\nspan {\nbackground-color: white;\n}\ndiv span {\nbackground-color: Blue;\n}\n<div>\n<span>Span 1.\n<span>Span 2.</span>\n</span>\n</div>\n<span>Span 3.</span>\n</listing>"}],"Job":[{"PageNumber":1,"Content":"Оберни в ссылку <code><a></code> все пункты меню.\n<listing>\n<ul class=\"footer_list\">\n                    <li><a href=\"#\">Log in</a></li>\n                    <li><a href=\"#\">RSS</a></li>\n                    <li><a href=\"#\">Wordpress.org</a></li>\n                </ul>\n</listing>"},{"PageNumber":2,"Content":"Ссылка <code><a></code> имеет по умолчанию свои косметические стили, давай перепишем размер шрифта и цвет.\nСелектор используй для <code><a></code> внутри .footer_list.\n<listing>\n.footer_list a {\n            font-size: 14px;\n            color: #046cc1;\n        }\n</listing>"},{"PageNumber":3,"Content":"Задай белый цвет текста при наведении на ссылку <code>a</code> с помощью псевдокласса <code>hover</code>\n<listing>\n.footer_list a:hover {\n            color: #fff;\n        }\n</listing>"}],"DescriptionText":"Накручиваем ссылки в элементах футера."},{"LessonNumber":16,"Title":"Встраиваем реальные отзывы","Type":"","Tags":"css[4], html[2]","Tech":"","Experience":"6","Comment":"","Description":[{"PageNumber":1,"Content":"Описание задачи:\n- Добавить фото реальных пользователей\n- Добавить тексты реальных пользователей\n\nТебе потребуется:\n- Получить и попробовать встроить контент\n- img\n\nРесурсы:\n<a href=\"/images/clientdata1.zip\">Данные клиента</a>"},{"PageNumber":2,"Content":"<author role=\"mentor\">\nСкачай вот этот архив, в нем три фотографии и тексты: <a href=\"/images/clientdata1.zip\">Скачать</a>\nНадо создать в проекте папочку для этих данных. Например, \"clientdata\" и сохранить все туда.\n</author>"}],"Tutorial":[{"PageNumber":1,"Content":"<h1>HTML Images</h1>\nПример использования изображения в html\n<listing>\n<!DOCTYPE html>\n<html>\n<body>\n<h2>Великие озера</h2>\n<img src=\"lakes.jpg\" alt=\"Lakes view\" style=\"width:400px;height:266px\">\n</body>\n</html>\n</listing>\nЖелательно указывать width и height для img, так как изначально браузер не знает сколько места выделить для картинки, и при загрузке картинки страница будет дергаться.\n<img> не требует закрывающего тега.\nalt - показывается тогда, когда не удалось загруить картинку.\n<h2>Width и Height</h2>\nМожно использовать атрибут style для указания ширины и высоты. Обратите внимание, что в CSS надо указывать единицы измерений, наприммер 'px'\n<listing>\n<img src=\"lakes.jpg\" alt=\"Lakes view\" style=\"width:400px;height:266px\">\n</listing>\nМожно воспользоваться атрибутами:\n<listing>\n<img src=\"lakes.jpg\" alt=\"Lakes view\" width=\"400\" height=\"266\">\n</listing>\nОба варианта допустимы.\n<h2>Расположение</h2>\nИзображение в том же каталоге, что и html:\n<listing>\n<img src=\"lakes.jpg\" alt=\"Lakes view\" width=\"400\" height=\"266\">\n</listing>\nВнутри подкаталога\n<listing>\n<img src=\"/images/lakes.jpg\" alt=\"Lakes view\" width=\"400\" height=\"266\">\n</listing>\nСсылка на изображение на другом сервере:\n<listing>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Red_Lory_%28Eos_bornea%29-6.jpg/130px-Red_Lory_%28Eos_bornea%29-6.jpg\" alt=\"Bird\" width=\"130\" height=\"162\">\n</listing>\n<h2>Использование в качестве ссылки</h2>\nРаспространенный прием использования изображений в качестве ссылки:\n<listing>\n<a href=\"https://en.wikipedia.org/wiki/Bird\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Red_Lory_%28Eos_bornea%29-6.jpg/130px-Red_Lory_%28Eos_bornea%29-6.jpg\" alt=\"Bird\" width=\"130\" height=\"162\">\n</a>\n</listing>\n<h2>Форматы изображений</h2>\njpg, gif and png - это главные форматы, используемые в вебе.\n<a href=\"http://en.wikipedia.org/wiki/Comparison_of_web_browsers#Image_format_support\">Подробнее о форматах</a>"}],"Job":[{"PageNumber":1,"Content":"Замени тестовые картинки тремя реальными, которые ты только что получил.\n<listing>\n<div class=\"user_avatar_cnt\">\n<img class=\"user_avatar\" src=\"clientdata/user1.jpg\"/>\n</div>\n</listing>\nОбрати внимание, что расширение у файлов теперь не png, a jpg"},{"PageNumber":2,"Content":"Потом тексты соответственно для каждого пользователя. Например, для первой колонки:\n<listing>\n<div class=\"testim_col\">\n                <div class=\"user_avatar_cnt\">\n                    <img class=\"user_avatar\" src=\"clientdata/user1.jpg\"/>\n                </div>\n                Отдавала на ремонт свой iPad, расшаталось гнездо для зарядки до такой степени, что уже не заряжался совсем. Заменили мне его быстро и не дорого,отдали мой iPad в срок, работа выполнена хорошо.\n            </div>\n</listing>"},{"PageNumber":3,"Content":"Аватарки выглядят не очень, правда?\n<img src=\"/images/avatars_bug.jpg\"/>\nВсе потому, что из размеры не квадратные и обрезать их средствами только <code><img></code> не получится.\nЕсть и другой момент: фото неоправданно большие и будут занимать лишнее время на их загрузку браузером.\nПравильнее обрезать фото до квадратного размера 120px, попросив, например, дизайнера."},{"PageNumber":4,"Content":"Дизайнер подогнал размер для нас.\nИ вот они новые: <a href=\"/images/new_avatars.jpg'>Скачать</a>\nОбнови их в своем проекте. Теперь все должно быть ОК"}],"DescriptionText":"Получаем новые данные от заказчика. Удастся ли встроить их без проблем?"},{"LessonNumber":17,"Title":"Новая страница","Type":"","Tags":"html[10], css[10]","Tech":"","Experience":"20","DescriptionText":"Самостоятельная задачка на добавление новой страницы.","Comment":"","Description":[{"PageNumber":1,"Content":"Описание задачи:\n- Сделать универсальную страничку информации.\n- Затем сделать переход на эту страничку по кнопке \"Подробнее\". Их три в синем блоке.\n- Обратный переход реализовать по логотипу iRepair.\n\nТебе потребуется:\n- Самостоятельно поработать.\n\nРесурсы:\nМакет странички информации: <a href=\"/images/info.png\">Скачать</a>"},{"PageNumber":2,"Content":"<author role=\"mentor\">\nУ тебя достаточно знаний, чтобы справиться самостоятельно с этой небольшой задачей. Дерзай!\n</author>"}],"Tutorial":[{"PageNumber":1,"Content":""}],"Job":[{"PageNumber":1,"Content":""}]},{"LessonNumber":18,"Title":"Завершение проекта","Type":"","Tags":"","Tech":"","Experience":"0","DescriptionText":"Проект подошел к концу. Время подвести итоги.","Comment":"","Description":[{"PageNumber":1,"Content":"<author role=\"mentor\">\nПоздравляю, ты успешно закончил ты свой первый небольшой проект.\n</author>"},{"PageNumber":2,"Content":"<author role=\"manager\">\nВсе прошло неплохо, уверен заказчик будет доволен и продолжит разработку сайта у нас.\n</author>"},{"PageNumber":3,"Content":"Пожалуйста, ответь на вопросы анкеты (примерно 1 минута), чтобы мы могли и дальше улучшать наш сервис:\n<a href=\"https://docs.google.com/forms/d/1ijOU07JXen5lAAcytoc2x5QHjt-3sS1c9KZM1_xfzmo/viewform\">Анкета</a>"}],"Tutorial":[{"PageNumber":1,"Content":""}],"Job":[{"PageNumber":1,"Content":""}]}],"TeacherId":"24"}